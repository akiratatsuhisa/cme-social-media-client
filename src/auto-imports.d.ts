/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const BinaryUnit: typeof import('./helpers/format')['BinaryUnit']
  const COVER_DIMENSIONS: typeof import('./helpers/file')['COVER_DIMENSIONS']
  const EffectScope: typeof import('vue')['EffectScope']
  const MIME_TYPE: typeof import('./helpers/file')['MIME_TYPE']
  const MessageChangedDocument: typeof import('./graphql/types-and-hooks.g')['MessageChangedDocument']
  const MessageType: typeof import('./graphql/types-and-hooks.g')['MessageType']
  const PHOTO_DIMENSIONS: typeof import('./helpers/file')['PHOTO_DIMENSIONS']
  const PingDocument: typeof import('./graphql/types-and-hooks.g')['PingDocument']
  const PlayerState: typeof import('./composables/useWaveSurfer')['PlayerState']
  const RecordState: typeof import('./composables/useWaveSurfer')['RecordState']
  const addPrefixToCSS: typeof import('./helpers/format')['addPrefixToCSS']
  const binaryUnit: typeof import('./helpers/format')['binaryUnit']
  const computed: typeof import('vue')['computed']
  const convertCanvasToFile: typeof import('./helpers/file')['convertCanvasToFile']
  const createApp: typeof import('vue')['createApp']
  const currency: typeof import('./helpers/format')['currency']
  const customRef: typeof import('vue')['customRef']
  const date: typeof import('./helpers/format')['date']
  const dateTime: typeof import('./helpers/format')['dateTime']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const formatDuration: typeof import('./helpers/format')['formatDuration']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const number: typeof import('./helpers/format')['number']
  const numberToRgb: typeof import('./helpers/format')['numberToRgb']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: (typeof import('vue-router'))['onBeforeRouteLeave']
  const onBeforeRouteUpdate: (typeof import('vue-router'))['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resizeImage: typeof import('./helpers/file')['resizeImage']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const rgbToNumber: typeof import('./helpers/format')['rgbToNumber']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuth0: typeof import('@auth0/auth0-vue')['useAuth0']
  const useBackgroundRoute: typeof import('./composables/useRouter')['useBackgroundRoute']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDisplayThemeColor: typeof import('./composables/useColor')['useDisplayThemeColor']
  const useFetchIntersection: typeof import('./composables/useFetchIntersection')['useFetchIntersection']
  const useHistoryState: typeof import('./composables/useRouter')['useHistoryState']
  const useId: typeof import('vue')['useId']
  const useImageCropper: typeof import('./composables/useImageCropper')['useImageCropper']
  const useLanguageStorage: typeof import('./composables/useAppStorage')['useLanguageStorage']
  const useLayoutLocale: typeof import('./composables/useLocale')['useLayoutLocale']
  const useLifecycleState: typeof import('./composables/useBehavior')['useLifecycleState']
  const useLink: (typeof import('vue-router'))['useLink']
  const useLocale: typeof import('./composables/useLocale')['useLocale']
  const useMessageChangedSubscription: typeof import('./graphql/types-and-hooks.g')['useMessageChangedSubscription']
  const useModel: typeof import('vue')['useModel']
  const useOpenFileDialog: typeof import('./composables/useFileDialog')['useOpenFileDialog']
  const usePageLocale: typeof import('./composables/useLocale')['usePageLocale']
  const usePingLazyQuery: typeof import('./graphql/types-and-hooks.g')['usePingLazyQuery']
  const usePingQuery: typeof import('./graphql/types-and-hooks.g')['usePingQuery']
  const useRecordTime: typeof import('./composables/useWaveSurfer')['useRecordTime']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouteWithModal: typeof import('./composables/useRouter')['useRouteWithModal']
  const useRouter: typeof import('vue-router')['useRouter']
  const useRouterDialog: typeof import('./composables/useRouter')['useRouterDialog']
  const useRouterModal: typeof import('./composables/useRouter')['useRouterModal']
  const useRouterTab: typeof import('./composables/useRouter')['useRouterTab']
  const useScrollBehavior: typeof import('./composables/useBehavior')['useScrollBehavior']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useThemeModeStorage: typeof import('./composables/useAppStorage')['useThemeModeStorage']
  const useThemePicker: typeof import('./composables/useColor')['useThemePicker']
  const useThemeStyleStorage: typeof import('./composables/useAppStorage')['useThemeStyleStorage']
  const useWaveSurfer: typeof import('./composables/useWaveSurfer')['useWaveSurfer']
  const useWaveSurferRecord: typeof import('./composables/useWaveSurfer')['useWaveSurferRecord']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { PlayerState, RecordState } from './composables/useWaveSurfer'
  import('./composables/useWaveSurfer')
  // @ts-ignore
  export type { BinaryUnit } from './helpers/format'
  import('./helpers/format')
  // @ts-ignore
  export type { MessageType } from './graphql/types-and-hooks.g'
  import('./graphql/types-and-hooks.g')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly BinaryUnit: UnwrapRef<typeof import('./helpers/format')['BinaryUnit']>
    readonly COVER_DIMENSIONS: UnwrapRef<typeof import('./helpers/file')['COVER_DIMENSIONS']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly MIME_TYPE: UnwrapRef<typeof import('./helpers/file')['MIME_TYPE']>
    readonly MessageChangedDocument: UnwrapRef<typeof import('./graphql/types-and-hooks.g')['MessageChangedDocument']>
    readonly MessageType: UnwrapRef<typeof import('./graphql/types-and-hooks.g')['MessageType']>
    readonly PHOTO_DIMENSIONS: UnwrapRef<typeof import('./helpers/file')['PHOTO_DIMENSIONS']>
    readonly PingDocument: UnwrapRef<typeof import('./graphql/types-and-hooks.g')['PingDocument']>
    readonly PlayerState: UnwrapRef<typeof import('./composables/useWaveSurfer')['PlayerState']>
    readonly RecordState: UnwrapRef<typeof import('./composables/useWaveSurfer')['RecordState']>
    readonly addPrefixToCSS: UnwrapRef<typeof import('./helpers/format')['addPrefixToCSS']>
    readonly binaryUnit: UnwrapRef<typeof import('./helpers/format')['binaryUnit']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly convertCanvasToFile: UnwrapRef<typeof import('./helpers/file')['convertCanvasToFile']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly currency: UnwrapRef<typeof import('./helpers/format')['currency']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly date: UnwrapRef<typeof import('./helpers/format')['date']>
    readonly dateTime: UnwrapRef<typeof import('./helpers/format')['dateTime']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly formatDuration: UnwrapRef<typeof import('./helpers/format')['formatDuration']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly number: UnwrapRef<typeof import('./helpers/format')['number']>
    readonly numberToRgb: UnwrapRef<typeof import('./helpers/format')['numberToRgb']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resizeImage: UnwrapRef<typeof import('./helpers/file')['resizeImage']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly rgbToNumber: UnwrapRef<typeof import('./helpers/format')['rgbToNumber']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuth0: UnwrapRef<typeof import('@auth0/auth0-vue')['useAuth0']>
    readonly useBackgroundRoute: UnwrapRef<typeof import('./composables/useRouter')['useBackgroundRoute']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDisplayThemeColor: UnwrapRef<typeof import('./composables/useColor')['useDisplayThemeColor']>
    readonly useFetchIntersection: UnwrapRef<typeof import('./composables/useFetchIntersection')['useFetchIntersection']>
    readonly useHistoryState: UnwrapRef<typeof import('./composables/useRouter')['useHistoryState']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useImageCropper: UnwrapRef<typeof import('./composables/useImageCropper')['useImageCropper']>
    readonly useLanguageStorage: UnwrapRef<typeof import('./composables/useAppStorage')['useLanguageStorage']>
    readonly useLayoutLocale: UnwrapRef<typeof import('./composables/useLocale')['useLayoutLocale']>
    readonly useLifecycleState: UnwrapRef<typeof import('./composables/useBehavior')['useLifecycleState']>
    readonly useLocale: UnwrapRef<typeof import('./composables/useLocale')['useLocale']>
    readonly useMessageChangedSubscription: UnwrapRef<typeof import('./graphql/types-and-hooks.g')['useMessageChangedSubscription']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useOpenFileDialog: UnwrapRef<typeof import('./composables/useFileDialog')['useOpenFileDialog']>
    readonly usePageLocale: UnwrapRef<typeof import('./composables/useLocale')['usePageLocale']>
    readonly usePingLazyQuery: UnwrapRef<typeof import('./graphql/types-and-hooks.g')['usePingLazyQuery']>
    readonly usePingQuery: UnwrapRef<typeof import('./graphql/types-and-hooks.g')['usePingQuery']>
    readonly useRecordTime: UnwrapRef<typeof import('./composables/useWaveSurfer')['useRecordTime']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouteWithModal: UnwrapRef<typeof import('./composables/useRouter')['useRouteWithModal']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useRouterDialog: UnwrapRef<typeof import('./composables/useRouter')['useRouterDialog']>
    readonly useRouterModal: UnwrapRef<typeof import('./composables/useRouter')['useRouterModal']>
    readonly useRouterTab: UnwrapRef<typeof import('./composables/useRouter')['useRouterTab']>
    readonly useScrollBehavior: UnwrapRef<typeof import('./composables/useBehavior')['useScrollBehavior']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly useThemeModeStorage: UnwrapRef<typeof import('./composables/useAppStorage')['useThemeModeStorage']>
    readonly useThemePicker: UnwrapRef<typeof import('./composables/useColor')['useThemePicker']>
    readonly useThemeStyleStorage: UnwrapRef<typeof import('./composables/useAppStorage')['useThemeStyleStorage']>
    readonly useWaveSurfer: UnwrapRef<typeof import('./composables/useWaveSurfer')['useWaveSurfer']>
    readonly useWaveSurferRecord: UnwrapRef<typeof import('./composables/useWaveSurfer')['useWaveSurferRecord']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
